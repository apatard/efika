imx51 ipu has a limited pixclock so deal with that.

TODO: check the imx51 user's manual.

Signed-off-by: Arnaud Patard <apatard@hupstream.com>

Index: linux/drivers/gpu/drm/imx/ipuv3-crtc.c
===================================================================
--- linux.orig/drivers/gpu/drm/imx/ipuv3-crtc.c
+++ linux/drivers/gpu/drm/imx/ipuv3-crtc.c
@@ -40,6 +40,7 @@ struct ipu_crtc {
 	struct ipu_di		*di;
 	int			irq;
 	struct drm_pending_vblank_event *event;
+	int			max_clock;
 };
 
 static inline struct ipu_crtc *to_ipu_crtc(struct drm_crtc *crtc)
@@ -321,9 +322,20 @@ static void ipu_crtc_mode_set_nofb(struc
 	ipu_di_init_sync_panel(ipu_crtc->di, &sig_cfg);
 }
 
+static enum drm_mode_status ipu_crtc_mode_valid(struct drm_crtc *crtc,
+							const struct drm_display_mode *mode)
+{
+	struct ipu_crtc *ipu_crtc = to_ipu_crtc(crtc);
+        if (ipu_crtc->max_clock && mode->clock > ipu_crtc->max_clock)
+                return MODE_CLOCK_HIGH;
+        return MODE_OK;
+}
+
+
 static const struct drm_crtc_helper_funcs ipu_helper_funcs = {
 	.mode_fixup = ipu_crtc_mode_fixup,
 	.mode_set_nofb = ipu_crtc_mode_set_nofb,
+	.mode_valid = ipu_crtc_mode_valid,
 	.atomic_check = ipu_crtc_atomic_check,
 	.atomic_begin = ipu_crtc_atomic_begin,
 	.atomic_flush = ipu_crtc_atomic_flush,
@@ -388,6 +400,7 @@ static int ipu_drm_bind(struct device *d
 
 	ipu_crtc->dev = dev;
 	ipu_crtc->plane[0] = primary_plane;
+	ipu_crtc->max_clock = pdata->max_clock;
 
 	crtc = &ipu_crtc->base;
 	crtc->port = pdata->of_node;
Index: linux/drivers/gpu/ipu-v3/ipu-common.c
===================================================================
--- linux.orig/drivers/gpu/ipu-v3/ipu-common.c
+++ linux/drivers/gpu/ipu-v3/ipu-common.c
@@ -1171,6 +1171,13 @@ static int ipu_add_client_devices(struct
 		pdev->dev.parent = dev;
 
 		reg->pdata.of_node = of_node;
+		reg->pdata.max_clock = 0;
+		/*
+		 * https://patchwork.kernel.org/project/linux-arm-kernel/patch/20131030190123.GM16735@n2100.arm.linux.org.uk/
+		 * states that max mode clock is 133MHz
+		 */
+		if (of_device_is_compatible(ipu->dev->of_node, "fsl,imx51-ipu"))
+			reg->pdata.max_clock = 133000; /* kHz */
 		ret = platform_device_add_data(pdev, &reg->pdata,
 					       sizeof(reg->pdata));
 		if (!ret)
Index: linux/include/video/imx-ipu-v3.h
===================================================================
--- linux.orig/include/video/imx-ipu-v3.h
+++ linux/include/video/imx-ipu-v3.h
@@ -498,6 +498,7 @@ struct ipu_client_platformdata {
 	int dp;
 	int dma[2];
 	struct device_node *of_node;
+	int max_clock;
 };
 
 #endif /* __DRM_IPU_H__ */
